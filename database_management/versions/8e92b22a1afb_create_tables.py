"""Create tables

Revision ID: 8e92b22a1afb
Revises: 
Create Date: 2024-07-04 22:35:29.464406

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "8e92b22a1afb"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "eth_block_import_status",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("block_number", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        "block_number_index",
        "eth_block_import_status",
        ["block_number"],
        unique=False,
        postgresql_using="btree",
    )
    op.create_table(
        "eth_blocks",
        sa.Column("block_number", sa.String(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("jsonrpc", sa.String(), nullable=False),
        sa.Column("basefeepergas", sa.String(), nullable=True),
        sa.Column("blobgasused", sa.String(), nullable=True),
        sa.Column("difficulty", sa.String(), nullable=False),
        sa.Column("excessblobgas", sa.String(), nullable=True),
        sa.Column("extradata", sa.String(), nullable=False),
        sa.Column("gaslimit", sa.String(), nullable=False),
        sa.Column("gasused", sa.String(), nullable=False),
        sa.Column("hash", sa.String(), nullable=True),
        sa.Column("logsbloom", sa.String(), nullable=False),
        sa.Column("miner", sa.String(), nullable=False),
        sa.Column("mixhash", sa.String(), nullable=False),
        sa.Column("nonce", sa.String(), nullable=False),
        sa.Column("number", sa.String(), nullable=False),
        sa.Column("parentbeaconblockroot", sa.String(), nullable=True),
        sa.Column("parenthash", sa.String(), nullable=False),
        sa.Column("receiptsroot", sa.String(), nullable=False),
        sa.Column("sha3uncles", sa.String(), nullable=False),
        sa.Column("size", sa.String(), nullable=False),
        sa.Column("stateroot", sa.String(), nullable=False),
        sa.Column("timestamp", sa.String(), nullable=False),
        sa.Column("totaldifficulty", sa.String(), nullable=False),
        sa.Column("transactionsroot", sa.String(), nullable=False),
        sa.Column("withdrawalsroot", sa.String(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("block_number"),
    )
    op.create_table(
        "eth_transactions",
        sa.Column("hash", sa.String(), nullable=False),
        sa.Column("block_number", sa.String(), nullable=False),
        sa.Column("block_id", sa.Integer(), nullable=True),
        sa.Column("blockhash", sa.String(), nullable=True),
        sa.Column("chainid", sa.String(), nullable=True),
        sa.Column("from_address", sa.String(), nullable=False),
        sa.Column("gas", sa.String(), nullable=False),
        sa.Column("gasprice", sa.String(), nullable=False),
        sa.Column("input", sa.String(), nullable=False),
        sa.Column("maxfeepergas", sa.String(), nullable=True),
        sa.Column("maxpriorityfeepergas", sa.String(), nullable=True),
        sa.Column("nonce", sa.String(), nullable=False),
        sa.Column("r", sa.String(), nullable=False),
        sa.Column("s", sa.String(), nullable=False),
        sa.Column("to_address", sa.String(), nullable=False),
        sa.Column("transactionindex", sa.String(), nullable=False),
        sa.Column("type", sa.String(), nullable=False),
        sa.Column("v", sa.String(), nullable=False),
        sa.Column("value", sa.String(), nullable=False),
        sa.Column("yparity", sa.String(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["block_number"],
            ["eth_blocks.block_number"],
            name="transactions_to_blocks_fk",
        ),
        sa.PrimaryKeyConstraint("hash"),
    )
    op.create_table(
        "eth_withdrawals",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("block_number", sa.String(), nullable=False),
        sa.Column("address", sa.String(), nullable=False),
        sa.Column("amount", sa.String(), nullable=False),
        sa.Column("index", sa.String(), nullable=False),
        sa.Column("validatorindex", sa.String(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["block_number"],
            ["eth_blocks.block_number"],
            name="withdrawals_to_blocks_fk",
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "eth_transaction_access_list",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("transaction_hash", sa.String(), nullable=False),
        sa.Column("address", sa.String(), nullable=False),
        sa.Column("storagekeys", postgresql.ARRAY(sa.String()), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["transaction_hash"],
            ["eth_transactions.hash"],
            name="transaction_access_list_to_transactions_fk",
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("eth_transaction_access_list")
    op.drop_table("eth_withdrawals")
    op.drop_table("eth_transactions")
    op.drop_table("eth_blocks")
    op.drop_index(
        "block_number_index",
        table_name="eth_block_import_status",
        postgresql_using="btree",
    )
    op.drop_table("eth_block_import_status")
    # ### end Alembic commands ###
