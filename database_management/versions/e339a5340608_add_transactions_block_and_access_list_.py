"""Add transactions, block, and access list item table

Revision ID: e339a5340608
Revises: 
Create Date: 2024-06-15 21:51:07.753198

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'e339a5340608'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('blocks',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('jsonrpc', sa.String(), nullable=False),
    sa.Column('baseFeePerGas', sa.String(), nullable=False),
    sa.Column('blobGasUsed', sa.String(), nullable=False),
    sa.Column('difficulty', sa.String(), nullable=False),
    sa.Column('excessBlobGas', sa.String(), nullable=False),
    sa.Column('extraData', sa.String(), nullable=False),
    sa.Column('gasLimit', sa.String(), nullable=False),
    sa.Column('gasUsed', sa.String(), nullable=False),
    sa.Column('hash', sa.String(), nullable=False),
    sa.Column('logsBloom', sa.String(), nullable=False),
    sa.Column('miner', sa.String(), nullable=False),
    sa.Column('mixHash', sa.String(), nullable=False),
    sa.Column('nonce', sa.String(), nullable=False),
    sa.Column('number', sa.String(), nullable=False),
    sa.Column('parentBeaconBlockRoot', sa.String(), nullable=False),
    sa.Column('parentHash', sa.String(), nullable=False),
    sa.Column('receiptsRoot', sa.String(), nullable=False),
    sa.Column('sha3Uncles', sa.String(), nullable=False),
    sa.Column('size', sa.String(), nullable=False),
    sa.Column('stateRoot', sa.String(), nullable=False),
    sa.Column('timestamp', sa.String(), nullable=False),
    sa.Column('totalDifficulty', sa.String(), nullable=False),
    sa.Column('transactionsRoot', sa.String(), nullable=False),
    sa.Column('withdrawalsRoot', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('transactions',
    sa.Column('hash', sa.String(), nullable=False),
    sa.Column('block_id', sa.String(), nullable=False),
    sa.Column('blockHash', sa.String(), nullable=False),
    sa.Column('blockNumber', sa.String(), nullable=False),
    sa.Column('chainId', sa.String(), nullable=True),
    sa.Column('from', sa.String(), nullable=False),
    sa.Column('gas', sa.String(), nullable=False),
    sa.Column('gasPrice', sa.String(), nullable=False),
    sa.Column('input', sa.String(), nullable=False),
    sa.Column('maxFeePerGas', sa.String(), nullable=True),
    sa.Column('maxPriorityFeePerGas', sa.String(), nullable=True),
    sa.Column('nonce', sa.String(), nullable=False),
    sa.Column('r', sa.String(), nullable=False),
    sa.Column('s', sa.String(), nullable=False),
    sa.Column('to', sa.String(), nullable=False),
    sa.Column('transactionIndex', sa.String(), nullable=False),
    sa.Column('type', sa.String(), nullable=False),
    sa.Column('v', sa.String(), nullable=False),
    sa.Column('value', sa.String(), nullable=False),
    sa.Column('yParity', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['block_id'], ['blocks.id'], name='transactions_to_block_id_fk'),
    sa.PrimaryKeyConstraint('hash')
    )
    op.create_table('transaction_access_list',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('transaction_hash', sa.String(), nullable=False),
    sa.Column('address', sa.String(), nullable=False),
    sa.Column('storageKeys', postgresql.ARRAY(sa.String()), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['transaction_hash'], ['transactions.hash'], name='transactions_to_access_list_fk'),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('transaction_access_list')
    op.drop_table('transactions')
    op.drop_table('blocks')
    # ### end Alembic commands ###
